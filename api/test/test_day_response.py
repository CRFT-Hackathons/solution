# coding: utf-8

"""
    OpenAPI

    OpenAPI

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api.models.day_response import DayResponse

class TestDayResponse(unittest.TestCase):
    """DayResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DayResponse:
        """Test DayResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DayResponse`
        """
        model = DayResponse()
        if include_optional:
            return DayResponse(
                round = 56,
                demand = [
                    api.models.demand.Demand(
                        customer_id = '', 
                        amount = 56, 
                        post_day = 56, 
                        start_day = 56, 
                        end_day = 56, )
                    ],
                penalties = [
                    api.models.penalty.Penalty(
                        day = 56, 
                        type = 'INVALID_CONNECTION', 
                        message = '', 
                        cost = 1.337, 
                        co2 = 1.337, )
                    ],
                delta_kpis = api.models.kpis.Kpis(
                    day = 56, 
                    cost = 1.337, 
                    co2 = 1.337, ),
                total_kpis = api.models.kpis.Kpis(
                    day = 56, 
                    cost = 1.337, 
                    co2 = 1.337, )
            )
        else:
            return DayResponse(
        )
        """

    def testDayResponse(self):
        """Test DayResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
